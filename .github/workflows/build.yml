name: Build CLI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout CLI code
      uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Download latest core blockchain JAR from releases
      run: |
        echo "Downloading latest privateBlockchain JAR..."
        # Try to get the latest release
        LATEST_RELEASE=$(curl -s "https://api.github.com/repos/${{ github.repository_owner }}/privateBlockchain/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
        if [ ! -z "$LATEST_RELEASE" ]; then
          echo "Found release: $LATEST_RELEASE"
          curl -L -o private-blockchain.jar "https://github.com/${{ github.repository_owner }}/privateBlockchain/releases/download/$LATEST_RELEASE/private-blockchain-1.0.0-jar-with-dependencies.jar"
        else
          echo "No releases found, will try to build without core dependency"
        fi
    
    - name: Install core JAR to local Maven repository (if available)
      run: |
        if [ -f private-blockchain.jar ]; then
          mvn install:install-file \
            -Dfile=private-blockchain.jar \
            -DgroupId=com.rbatllet \
            -DartifactId=private-blockchain \
            -Dversion=1.0.0 \
            -Dpackaging=jar
          echo "Core blockchain JAR installed successfully"
        else
          echo "Core JAR not available, proceeding without it"
        fi
    
    - name: Build CLI JAR (skip tests if core not available)
      run: |
        if [ -f private-blockchain.jar ]; then
          echo "Building with tests..."
          mvn clean package
        else
          echo "Building without tests (core dependency not available)..."
          mvn clean package -DskipTests
        fi
    
    - name: List generated files
      run: |
        echo "Generated JAR files:"
        ls -la target/*.jar || echo "No JAR files found"
    
    - name: Upload CLI JAR artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: blockchain-cli-jars
        path: |
          target/blockchain-cli.jar
          target/blockchain-cli-assembly-jar-with-dependencies.jar
          target/private-blockchain-cli-*.jar
        retention-days: 30
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always() && hashFiles('target/surefire-reports/*') != ''
      with:
        name: cli-test-results
        path: target/surefire-reports/
        retention-days: 30